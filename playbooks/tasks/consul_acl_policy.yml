---
- block:
  # - set_fact:
  #     consul_server_docker_host_name: "{{ consul_server }}"
  #     consul_server_container_name: "{{ containers.consul_server[0].name }}"
  #     consul_acl_policy_state: present
  #     consul_acl_policy_name: consul-agent-{{ item.split('.')[0] }}
  #     consul_acl_policy_rule: |
  #       node "{{ item.split('.')[0] }}" {
  #         policy = "write"
  #       }
  #     consul_acl_policy_description: "Write privileges for node related actions"

  - name: Create consul acl policy
    shell: docker exec -it {{ consul_server_container_name }} sh -c
      'if ! consul acl policy list | grep "^{{ consul_acl_policy_name }}:" ; then
        echo -ne "\n{{ consul_acl_policy_rule|replace('"', '\"') }}"
        | consul acl policy create
          -name "{{ consul_acl_policy_name }}"
          -description "{{ consul_acl_policy_description }}"
          -rules -
        && echo changed;
      else
        if [
          "$(consul acl policy read -name "{{ consul_acl_policy_name }}" | awk "/Rules:/,0")"
          != "$(echo -ne "Rules:\n\n{{ consul_acl_policy_rule|replace('"', '\"') }}")"
        ] ; then
          echo -ne "\n{{ consul_acl_policy_rule|replace('"', '\"') }}"
          | consul acl policy update
            -name "{{ consul_acl_policy_name }}"
            -description "{{ consul_acl_policy_description }}"
            -rules -
          && echo changed;
        else
          echo skipped;
        fi
      fi'
    register: command_result
    changed_when: command_result.stdout_lines|length > 0 and command_result.stdout_lines[-1] == 'changed'
    when: consul_acl_policy_state == 'present'
    delegate_to: "{{ consul_server_docker_host_name|default(omit) }}"

  when: containers is defined and containers.consul_server is defined and consul_bootstrap_token is defined

