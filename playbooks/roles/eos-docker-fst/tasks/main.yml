---
- name: Setup firewall
  firewalld:
    port: "{{ item }}"
    permanent: yes
    immediate: yes
    state: enabled
    zone: internal
  loop: 
  - 1095/tcp
  - 8001/tcp
  - 1096/tcp
  - 8002/tcp
  when: containers.eos_mgm[0].network_mode is defined
  notify:
  - reload firewalld
- meta: flush_handlers

- block:
  - name: Setup container
    include_tasks: tasks/eos_container_setup.yml
    vars:
      components: "{{ containers.eos_fst }}"
      config_base_directory: "{{ eos_fst_config_base_directory }}"
      shipped_files: "{{ eos_fst_shipped_files }}"
      generated_files: "{{ eos_fst_generated_files }}"
      template_files: "{{ eos_fst_template_files }}"
      config_files: "{{ eos_fst_config_files }}"
      config_directories: "{{ eos_fst_config_directories }}"
      persistent_volumes: "{{ eos_fst_persistent_volumes }}"
      privileged_container: yes
      env:
        NODE_FQDN: "{{ ansible_hostname+'.'+container_domain if item.network_mode is defined and item.network_mode == 'host' else omit }}"
      command:
      - fst

  - set_fact:
      restart_notifies: >-
        {% set result = [] -%}
        {% for item in create_template_file_results.results + create_generated_file_results.results -%}
        {%   if item.changed and item.item[0].is_initialized -%}
        {{     result.append( item.item[0].name ) -}}
        {%   endif -%}
        {% endfor -%}
        {{ result|unique }}

  - name: Restart by config files
    shell: docker restart {{ item }}
    loop: "{{ restart_notifies|default([]) }}"

  - name: Init default fst setup
    shell: |
      docker exec -it {{ item.name }} bash -c '
        set -o errexit;
        set -o pipefail;
        if [ ! -e /root/INITIALIZED_fst ] ; then
          eos -b node set {{ ansible_hostname+"."+container_domain if item.network_mode is defined and item.network_mode == "host" else "$(hostname -f)" }}:{{ item.fst_xrd_port }} on | /usr/bin/tee -a /root/INITIALIZED_mgm.log ;
          touch /root/INITIALIZED_fst ;
          echo changed;
        else
          echo skipped;
        fi
      '
    args:
      executable: /bin/bash
    register: command_result
    changed_when: command_result.stdout_lines|length > 0 and command_result.stdout_lines[-1] == 'changed'
    loop: "{{ container_infos }}"

  when: containers is defined and containers.eos_fst is defined
