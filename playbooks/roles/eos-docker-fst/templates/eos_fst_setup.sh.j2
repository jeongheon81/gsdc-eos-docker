#!/usr/bin/env bash

id={{ item[0].eos_component.fst_fsid }}

UUID={{ item[0].eos_component.fst_uuid }}
DATADIR={{ item[0].eos_component.data_dir }}
SPACE={{ item[0].eos_component.fst_space }}
CONFIG={{ item[0].eos_component.fst_status }}
FSTHOSTNAME={{ item[0].eos_component.name }}.{{ item[0].eos_component.domain }}

source /etc/sysconfig/eos
export EOS_MGM_URL={{ eos_mgm_url_regular }}

if [ ! -e /tmp/xrootd.fst.pid ] || ! ps $(cat /tmp/xrootd.fst.pid) | grep 'xrootd -n fst' &>/dev/null ; then
  if [ -e /opt/eos/xrootd/bin/xrootd ]; then 
    XROOTDEXE="/opt/eos/xrootd//bin/xrootd"
  else
    XROOTDEXE="/usr/bin/xrootd"
  fi

  cd /var/spool/eos/core
  echo "Starting fst: {{ item[0].eos_component.name }} ..."
  ${XROOTDEXE} -n fst -c /etc/xrd.cf.fst -l /var/log/eos/xrootd.fst.log -k fifo -s /tmp/xrootd.fst.pid -b -Rdaemon

  if [ ! -e /root/INITIALIZED ] ; then
    echo "Configuring fst: {{ item[0].eos_component.name }} ..."
    mkdir -p $DATADIR
    echo "$UUID" > $DATADIR/.eosfsuuid
    echo "${id}" > $DATADIR/.eosfsid
    chown -R daemon:daemon $DATADIR
    eos -b fs add -m ${id} $UUID $FSTHOSTNAME:1095 $DATADIR $SPACE $CONFIG
    eos -b node set $FSTHOSTNAME:1095 on
    echo "Configuration done for fst: {{ item[0].eos_component.name }}"

    touch /root/INITIALIZED
  fi
else
  echo "Already started, PID: $(cat /tmp/xrootd.fst.pid)"
fi
