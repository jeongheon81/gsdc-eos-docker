---
- block:
  - set_fact:
      grafana_components: "{{ containers.grafana_promtail }}"

  - name: Create config base directory
    file:
      path: "/etc/grafana/"
      state: directory
      owner: root
      group: root
      mode: u=rwX,g=rX,o=rX

  - name: Create config files directory
    file:
      path: "/etc/grafana/promtail"
      state: directory
      owner: root
      group: root
      mode: u=rwX,g=rX,o=rX

  - name: Create config files
    template:
      src: local-config.yaml.j2
      dest: /etc/grafana/promtail/local-config.yaml
      owner: root
      group: root
      mode: "0644"

  - name: Create sd config files
    template:
      src: logs-sd.json.j2
      dest: /etc/grafana/promtail/{{ log_volume.job_prefix }}_logs-sd.json
      owner: root
      group: root
      mode: "0644"
    loop: "{{ log_volumes }}"
    loop_control:
      loop_var: log_volume

  - name: Create a local volume
    docker_volume:
      name: "grafana-promtail_storage"

  - set_fact:
      container_volumes_basic:
      - "/var/log:/var/log:ro"
      - "/run/log/journal:/run/log/journal:ro"
      - "/etc/grafana/promtail:/etc/promtail"
      - "grafana-promtail_storage:/tmp/promtail"

  - set_fact:
      container_volumes: "{{ (container_volumes|default([])) + [ item.name+':/run/log/'+item.name+':ro' ] }}"
    loop: "{{ log_volumes }}"

  - name: Start container
    docker_container:
      name: "grafana-promtail"
      image: "grafana/promtail:latest"
      state: started
      command: -config.file=/etc/promtail/local-config.yaml
      purge_networks: yes
      network_mode: host
      volumes: "{{ container_volumes + container_volumes_basic }}"
    register: container_start_results

  - name: Setup firewall on internal zone
    firewalld:
      port: 9080/tcp
      permanent: yes
      immediate: yes
      state: enabled
      zone: internal
    notify:
    - reload firewalld

  when: containers is defined and containers.grafana_promtail is defined
