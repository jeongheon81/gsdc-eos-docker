# ----------------------------------------------------------------------
# File: eos.example
# Author: Andreas-Joachim Peters - CERN
# ----------------------------------------------------------------------
{% set xrd_roles = item[0].xrd_roles %}

# ************************************************************************
# * EOS - the CERN Disk Storage System                                   *
# * Copyright (C) 2011 CERN/Switzerland                                  *
# *                                                                      *
# * This program is free software: you can redistribute it and/or modify *
# * it under the terms of the GNU General Public License as published by *
# * the Free Software Foundation, either version 3 of the License, or    *
# * (at your option) any later version.                                  *
# *                                                                      *
# * This program is distributed in the hope that it will be useful,      *
# * but WITHOUT ANY WARRANTY; without even the implied warranty of       *
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *
# * GNU General Public License for more details.                         *
# *                                                                      *
# * You should have received a copy of the GNU General Public License    *
# * along with this program.  If not, see <http://www.gnu.org/licenses/>.*
# ************************************************************************

# Should we run with another limit on the core file size other than the default?
export DAEMON_COREFILE_LIMIT=unlimited

# Preload jemalloc
export LD_PRELOAD=/usr/lib64/libjemalloc.so.1

# Disable the KRB5 replay cache
export KRB5RCACHETYPE=none

# What roles should the xroot daemon run for. For each role you can overwrite
# the default options using a dedicate sysconfig file
# e.g. /etc/sysconfig/xrd.<role>. The role based mechanism allows for
# multiple xrd's running with different options to be controlled via
# the same initd script

export XRD_ROLES="{{ xrd_roles|join(' ') }}"

# ------------------------------------------------------------------
# EOS Configuration
# ------------------------------------------------------------------

# The EOS instance name
export EOS_INSTANCE_NAME={{ eos_instance_name }}

# The EOS configuration to load after daemon start
export EOS_AUTOLOAD_CONFIG=default

# The EOS broker URL
export EOS_BROKER_URL={{ eos_broker_url }}

# The EOS host geo location tag used to sort hosts into geographical (rack) locations 
export EOS_GEOTAG="{{ eos_geotag }}"

{% for eos_mgm_node in eos_mgm_masters %}
# The fully qualified hostname of MGM master{{ loop.index }}
export EOS_MGM_MASTER{{ loop.index }}={{ eos_mgm_node }}

{% endfor %}

# The alias which selects master 1 or 2
export EOS_MGM_ALIAS={{ eos_mgm_alias }}

{% if item[0].mgm_host is defined and item[0].mgm_host_target is defined %}
# The fully qualified hostname of current MGM
#export EOS_MGM_HOST={{ item[0].mgm_host }}

# The fully qualified hostname of target MGM
#export EOS_MGM_HOST_TARGET={{ item[0].mgm_host_target }}
{% endif %}

# The URL address of MGM
export EOS_MGM_URL="root://${EOS_MGM_ALIAS}:1094"

# Define if you want a namespace copy when doing a slave2master transition [default off]
# export EOS_MGM_CP_ON_FAILOVER=1

# The mail notification in case of fail-over
export EOS_MAIL_CC="{{ eos_mail_cc }}"
export EOS_NOTIFY="mail -s `date +%s`-`hostname`-eos-notify $EOS_MAIL_CC"

# Path to json file(s) listing kinetic drive details and cluster definition.
#export KINETIC_DRIVE_LOCATION=
#export KINETIC_DRIVE_SECURITY=
#export KINETIC_CLUSTER_DEFINITION=

# Enable core dumps initiated internally
#export EOS_CORE_DUMP

# Disable shutdown/signal handlers for debugging
#export EOS_NO_SHUTDOWN

# Enable coverage report signal handler
#export EOS_COVERAGE_REPORT

# Allow UTF-8 path names excluding only CR,LF
#export EOS_UTF8=""

# Add secondary group information from database/LDAP (set to 1 to enable)
#export EOS_SECONDARY_GROUPS=0

# Do subtree accounting on directories (set to 1 to enable)
export EOS_NS_ACCOUNTING=1

# Do sync time propagation (set to 1 to enable)
#export EOS_SYNCTIME_ACCOUNTING=0
EOS_SYNCTIME_ACCOUNTING=1

# Allow read-write-modify to unpriviledged users (define to set, undefine to unset)
# export EOS_ALLOW_RAIN_RWM

# Use std::shared_timed_mutex for the RWMutex implementation - uncomment to
# enable.
export EOS_USE_SHARED_MUTEX=1

# Allow heap profiling when using jemalloc built with profiling enabled (start profiling with signal 40 and stop with signal 41)
# for information about the option see https://linux.die.net/man/3/jemalloc
# export MALLOC_CONF_mgm="prof:true,prof_active:false,prof_accum:true,lg_prof_interval:30"
# means enable profiling support, start with NOT running profiling, issue cumulative dumps, autodump a profile every 2^30 bytes (1GB)

# Duplicate all logging information to SYSLOG
# export EOS_LOG_SYSLOG=0 ( set 1 or true to enable)

# By default statvfs reports the total space if the path deepness is < 4
# If you want to report only quota accouting you can define
# EOS_MGM_STATVFS_ONLY_QUOTA=1

# Enable the use of xrootd connection pool i.e. create/share different physical
# connections for transfers to the same destination xrootd server. By default
# this is disabled.
# This applies both in context of the MGM server when it comes to TPC jobs and
# also on the FST server for FST to FST transfers.
export EOS_XRD_USE_CONNECTION_POOL=1

# When xrootd connection pool is enabled, one can control the maximum number
# of physical connection that can be established with the destination server.
# The min value is 1 and the max 1024. By default this 1024.
export EOS_XRD_CONNECTION_POOL_SIZE=1024

# Enable QoS support
export EOS_ENABLE_QOS=""

# Enable Converter Engine
export EOS_CONVERTER_DRIVER=1

# Define if sync/eossync should be started separately, not by MGM
{% if not eos_use_qdb|bool %}# {% endif -%}
export EOS_START_SYNC_SEPARATELY=1

# Enable QuarkDB HA setup
{% if not eos_use_qdb|bool %}# {% endif -%}
export EOS_USE_QDB_MASTER=1

# TODO: modify by CERN
EOS_DISABLE_BACKWARD_STACKTRACE="1"
EOS_HEALTH="1"
EOS_MGM_FAILOVERTIME="300"
EOS_NS_QDB_SKIP_UNLINKED_FILELIST="1"

# ------------------------------------------------------------------
# FST Configuration
# ------------------------------------------------------------------

# Number of threads for transfer operations (Balance, Drain or Transfer actions)
export EOS_FST_TRANSFER_THREAD_POOL=20

# Disable 'sss' enforcement to allow generic TPC
#export EOS_FST_NO_SSS_ENFORCEMENT=1

# Network interface to monitor (default eth0)
#export EOS_FST_NETWORK_INTERFACE="eth0"
export EOS_FST_NETWORK_INTERFACE="br1"

# Network interface speed (automatic detection works only on SLC6)
# specify in MBit/s
#export EOS_FST_NETWORK_SPEED=1000

# Stream timeout for operations
#export EOS_FST_STREAM_TIMEOUT=300

# Specify in seconds how often FSTs should query for new delete operations
export EOS_FST_DELETE_QUERY_INTERVAL=60

# Disable fast boot and always do a full resync when a fs is booting
# export EOS_FST_NO_FAST_BOOT=0 (default off)

# Change minimum file system size setting - default is to have at least 5 GB free on a partition
#export EOS_FS_FULL_SIZE_IN_GB=5

# Set number of connection retries
export EOS_FST_CONNECTION_RETRY=1

# Set S3 access key & secret key
#export EOS_FST_S3_ACCESS_KEY=""
#export EOS_FST_S3_SECRET_KEY=""

# Set S3 theoretical storage size
#export EOS_FST_S3_STORAGE_SIZE=1000000000000000

# Set HTTPS X509 certificate path
#export EOS_FST_HTTPS_X509_CERTIFICATE_PATH=""

# Set the connection pool size for FST=>FST connections (default is 64 - range 1 to 1024)
# EOS_FST_XRDIO_CONNECTION_POOL_SIZE=64

# If variable defined then enable the use of xrootd connection pool i.e.
# create/share different physical connections for queries done from the FST
# to the MGM in the CallManager method. By default this is disabled.
# export EOS_FST_CALL_MANAGER_XRD_POOL=1

# If CallManager xrootd connection pool is enabled one can set the maximum size
# of the pool of connections. The min value is 1, the max value is 32. By default
# the value is 10.
# export EOS_FST_CALL_MANAGER_XRD_POOL_SIZE=10

# If variable defined use asynchronous (double-buffered) reading in TPCs - By default
# it is undefined = disabled
# EOS_FST_TPC_READASYNC=1

# The port the FST should run on
#export EOS_FST_PORT={{ item[0].fst_xrd_port|default('1095') }}

# ------------------------------------------------------------------
# FUSE Configuration
# ------------------------------------------------------------------

# The local mount directory for 'eosd' 
export EOS_FUSE_MOUNTDIR=/eos/

# The optional remote directory visiable unter the mount dir
#export EOS_FUSE_REMOTEDIR=/eos/

# The MGM host from where to do the inital mount
export EOS_FUSE_MGM_ALIAS={{ eos_fuse_mgm_alias }}

# Enable FUSE debugging mode (default off)
#export EOS_FUSE_DEBUG=1

# Enable FUSE low-level debugging mode (default off)
#export EOS_FUSE_LOWLEVEL_DEBUG=1

# Specify the FUSE logging level (default=6 is LOG_INFO ... see /usr/include/sys/syslog.h LOG_XXX definitions)

# EOS_FUSE_DEBUG=1 overwrites these settings
#export EOS_FUSE_LOGLEVEL=4

# Set FUSE to not daemonize the process, staying open in the foreground
# export EOS_FUSE_FOREGROUND=1

# Timeout in seconds of the initial ping to the instance to check if the fs should be mounted
#   note that this is constrained by XRD_TIMEOUTRESOLUTION which by default is 15 sec
# export EOS_FUSE_PING_TIMEOUT=15

# Disable parallel IO mode (default on)
#export EOS_FUSE_NOPIO=1

# Disable multithreading in FUSE (default on)
#export EOS_FUSE_NO_MT=1

# Enable FUSE read-ahead (default off)
#export EOS_FUSE_RDAHEAD=0

# Configure FUSE read-ahead window (default 128k)
# export EOS_FUSE_RDAHEAD_WINDOW=131072

# Disable using access for access permission check (default on)
# export EOS_FUSE_NOACCESS=0

# Disable to use the kernel cache (default on)
# export EOS_FUSE_KERNELCACHE=0

# Bypass the buffercache for write - avoids 4k chopping of IO (default off)
# (this is not what people understand under O_DIRECT !!!!
# export EOS_FUSE_DIRECTIO=1

# Disable the write-back cache (default on)
# export EOS_FUSE_CACHE=0

# Set the write-back cache size (default 300M)
# export EOS_FUSE_CACHE_SIZE=0

# Use the FUSE big write feature ( FUSE >=2.8 ) (default off)
# export EOS_FUSE_BIGWRITES=1

# Mount all files with 'x' bit to be able to run as an executable (default off)
# export EOS_FUSE_EXEC=1

# Enable protection against recursive deletion (rm -r command)
#    starting from the root of the mount (if 1)
#    or from any of its sub directories at a maximum depth (if >1) (default 1)
# export EOS_FUSE_RMLVL_PROTECT=1

# Enable Kerberos authentication. This avoid need to set gateways on the mgm.
#    file cache credential should be used. (default 0)
# export EOS_FUSE_USER_KRB5CC=0

# Enable X509 GSI authentication. This avoid need to set gateways on the mgm.
#    file user proxy should be used. (default 0)
# export EOS_FUSE_USER_GSIPROXY=0

# If both KRB5 and X509 are enabled, specify if KRB5 should be tried first.
#    (default 0)
# export EOS_FUSE_USER_KRB5FIRST=0

# If a connection fails using strong authentication, this is the timeout before actully retrying
#    in the meantime, all access by the concerned user will be rejected (indicating authentication failure)
#    !! WARNING: If a low value is used on a batch machine, it could have an impact on the authentication burden on the server side
#    On interactive servers, it will be the longest time taken between refreshing the credentials and this taking effect on the fuse mount 
#    (default is XRD_STREAMERRORWINDOW default value)
# export EOS_FUSE_STREAMERRORWINDOW=1

# Enable the fuse local host time consistency model
#   this allows a more precise handling of mtime. Time reference is then the localhost time
#   this is very useful to use applications massively relying on mtime : e.g. emacs, make, ...
#   this only affects the shared fuse mount (default 0)
#   !! WARNING: it is strongly advised to synchronise the shared mount clock with the eos intance clock to use this !!
# export EOS_FUSE_LOCALTIMECONSISTENT=0

# If KRB5 or X509 are enabled, specify the mapping from pid to strong authentication 
#    should be kept as symlinks under /var/run/eosd/credentials/pidXXXX 
#    (default 0)
# export EOS_FUSE_PIDMAP=0

# Disable using access for access permission check (default on)
# export EOS_FUSE_NOACCESS=0

# Disable to use the kernel cache (default on)
# export EOS_FUSE_KERNELCACHE=0

# Bypass the buffercache for write - avoids 4k chopping of IO (default off)
# (this is not what people understand under O_DIRECT !!!!
# export EOS_FUSE_DIRECTIO=1

# Disable the write-back cache (default on)
# export EOS_FUSE_CACHE=0

# Set the write-back cache size (default 300M)
# export EOS_FUSE_CACHE_SIZE=0

# Use the FUSE big write feature ( FUSE >=2.8 ) (default on)
# export EOS_FUSE_BIGWRITES=1

# Mount all files with 'x' bit to be able to run as an executable (default off)
# export EOS_FUSE_EXEC=1

# Enable protection against recursive deletion (rm -r command) 
#    starting from the root of the mount (if 1)
#    or from any of its sub directories at a maximum depth (if >1) (default 1)
# export EOS_FUSE_RMLVL_PROTECT=1

# Disable using access for access permission check (default on)
# export EOS_FUSE_NOACCESS=0

# Disable to use the kernel cache (default on)
# export EOS_FUSE_KERNELCACHE=0

# Bypass the buffercache for write - avoids 4k chopping of IO (default off)
# (this is not what people understand under O_DIRECT !!!!
# export EOS_FUSE_DIRECTIO=1

# Disable the write-back cache (default on)
# export EOS_FUSE_CACHE=0

# Set the write-back cache size (default 300M)
# export EOS_FUSE_CACHE_SIZE=0

# Set the write-back cache pagesize (default 256k)
# export EOS_FUSE_CACHE_PAGE_SIZE=262144

# Use the FUSE big write feature ( FUSE >=2.8 ) (default on)
# export EOS_FUSE_BIGWRITES=1

# Mount all files with 'x' bit to be able to run as an executable (default off)
# export EOS_FUSE_EXEC=1

# Enable protection against recursive deletion (rm -r command) 
#    starting from the root of the mount (if 1)
#    or from any of its sub directories at a maximum depth (if >1) (default 1)
# export EOS_FUSE_RMLVL_PROTECT=1

# Enable lazy-open of files for reading e.g. files are only opened on an FST if a read is done
#    by default this option is disabled because most ro files want to read and 
#    there is a penalty in the two-step process
# export EOS_FUSE_LAZYOPENRO=0

# Enable lazy-open of files for writing 
#    applications get a visible performance boost by using this option and the latency in synchronous replication
#    on the FSTs is completely hidden. By default this option is enabled
# export EOS_FUSE_LAZYOPENRW=1

# Enable asynchronous open of files 
#    it is an optimization over the lazy_open hiding even more latency
#    it is used only if lazy-open is activated
# export EOS_FUSE_ASYNC_OPEN=1

# Show hidden files from atomic/versioning and backup entries
#    By default this option is disabled
# export EOS_FUSE_SHOW_SPECIAL_FILES=0

# Show extended attributes related to EOS itself - this are sys.* and emulated user.eos.* attributes for files
#    By default this option is diabled
# export EOS_FUSE_SHOW_EOS_ATTRIBUTES=0

# Add(OR) an additional mode mask to the mode shown
#    By default this option is off
# export EOS_FUSE_MODE_OVERLAY=000     (use 007 to show things are rwx for w)

# Enable inline-repair mode for file updates of files with offline replica/stripe
#    By default this option is enabled
# export EOS_FUSE_INLINE_REPAIR=1

# Definae maximum inline-repair size for the previous flag
#    By default the maximum size is 256M
# export EOS_FUSE_MAX_INLINE_REPAIR_SIZE=268435456

# Set FUSE kernel cache time for directory entries (readdir cache) - default 10 seconds
# export EOS_FUSE_ENTRY_CACHE_TIME=10

# Set FUSE kernel attribute cache time (stat cache) - default 10 seconds
# export EOS_FUSE_ATTR_CACHE_TIME=10

# Set FUSE kernel negative stat cache time - default 30 seconds
# export EOS_FUSE_NEG_ENTRY_CACHE_TIME=30

# an XRootD client bug makes that sometimes when a stat is issued it can come back with a null response
# when this happens, it gets retried a few times sleeping between attempts
# export EOS_FUSE_XRDBUGNULLRESPONSE_RETRYCOUNT=3
# export EOS_FUSE_XRDBUGNULLRESPONSE_RETRYSLEEPMS=1

# Have the fuse mount retry endlessly if the MGM can not be contacted (default off)
# export EOS_FUSE_RETRY_CONNECTION_ERROR=1

# Maximum number of retries in case a synchronous open fails. Default 100.
# export EOS_FUSE_OPEN_MAX_RETRIES=100

# Set FUSE client creator CAP liftime
#    During this time window all reads done on the client where a file has been created
#    can be served from a local file write-back cache.
#    this improves significantly compilation. Remote changes are not visible inside
#    files after creation during the specified time period. Default is 30 seconds.
# export EOS_FUSE_CREATOR_CAP_LIFETIME=30

# Set FUSE client max. write-back cache size per file
#    This is required until kernel 3.15. where the write-back cache of the kernel can be used
#    via a mount option. The default is 64 MB.
# export EOS_FUSE_FILE_WB_CACHE_SIZE=67108864

# Set the FUSE maximum in-memory size for all write-back cache entries - default 512M - clean-interval is fixed at 10 seconds
# export EOS_FUSE_MAX_WB_INMEMORY_SIZE=536870912

# Enable SSS connection. The path to the keytab file should be given there.  
#    if KRB5 or GSI authentication is enabled, this is ignored 
# export EOS_FUSE_SSS_KEYTAB=""

# ---------------------------------------------------------------------------------
# this options are not available since AQUAMARINE is compiled with XROOTD3 
# --------------------------------------------------------------------------------- 
# Enable Kerberos authentication. This avoid need to set gateways on the mgm. 
#    file cache credential should be used. (default 0)
# export EOS_FUSE_USER_KRB5CC=0
# ---------------------------------------------------------------------------------
# Enable X509 GSI authentication. This avoid need to set gateways on the mgm. 
#    file user proxy should be used. (default 0)
# export EOS_FUSE_USER_GSIPROXY=0
# ---------------------------------------------------------------------------------
# If both KRB5 and X509 are enabled, specify if KRB5 should be tried first. 
#    (default 0)
# export EOS_FUSE_USER_KRB5FIRST=0
# ---------------------------------------------------------------------------------
# If a connection fails using strong authentication, this is the timeout before actully retrying
#    in the meantime, all access by the concerned user will be rejected (indicating authentication failure)
#    !! WARNING: If a low value is used on a batch machine, it could have an impact on the authentication burden on the server side
#    On interactive servers, it will be the longest time taken between refreshing the credentials and this taking effect on the fuse mount 
#    (default is XRD_STREAMERRORWINDOW default value)
# export EOS_FUSE_STREAMERRORWINDOW=1
# ---------------------------------------------------------------------------------
# If KRB5 or X509 are enabled, specify the mapping from pid to strong authentication 
#    should be kept as symlinks under /var/run/eosd/credentials/pidXXXX 
#    (default 0)
# export EOS_FUSE_PIDMAP=
# ---------------------------------------------------------------------------------

# Configure a log-file prefix - useful for several FUSE instances
#export EOS_FUSE_LOG_PREFIX=dev
# => will create /var/log/eos/fuse.dev.log

# Configure multiple FUSE mounts a,b configured in /etc/sysconfig/eos.a /etc/sysconfig/eos.b
#export EOS_FUSE_MOUNTS="a b"

# ------------------------------------------------------------------
# HTTPD Configuration
# ------------------------------------------------------------------
# HTTP server ports

# MGM
#export EOS_MGM_HTTP_PORT=8000 

# FST
export EOS_FST_HTTP_PORT={{ item[0].fst_http_port|default('8001') }} 

# HTTP uses by default one thread per connection
#export EOS_HTTP_THREADPOOL="threads"

# we use EPOLL and 16 threads 
export EOS_HTTP_THREADPOOL="epoll"
export EOS_HTTP_THREADPOOL_SIZE=64

# memory buffer size per connection 
#export EOS_HTTP_CONNECTION_MEMORY_LIMIT=134217728 (default 128M)
export EOS_HTTP_CONNECTION_MEMORY_LIMIT=4194304

# timeout after which an idel connection is considered to be closed (default 2 min)
#export EOS_HTTP_CONNETION_TIMEOUT=120

#-------------------------------------------------------------------------------
# GRPC Configuration
#-------------------------------------------------------------------------------

# GRPC port - set to 0 to disable GRPC
export EOS_MGM_GRPC_PORT=50051

# GRPC security - define to enable SSL server
#export EOS_MGM_GRPC_SSL_CERT
#export EOS_MGM_GRPC_SSL_KEY
#export EOS_MGM_GRPC_SSL_CA

#-------------------------------------------------------------------------------
# FUSEX Configuration
#-------------------------------------------------------------------------------

# Listener port of the ZMQ server used by FUSEx)
# EOS_MGM_FUSEX_PORT=1100

# Maximum number of 'listable' children
# EOS_MGM_FUSEX_MAX_CHILDREN=32768

# ------------------------------------------------------------------
# Federation Configuration
# ------------------------------------------------------------------

# The host[:port] name of the meta manager (global redirector)
#export EOS_FED_MANAGER=eos.cern.ch:1094

# The port of the PSS xrootd server
#export EOS_PSS_PORT=1098

# The hostname[:port] of the EOS MGM service
#export EOS_PSS_MGM=$EOS_MGM_ALIAS:1094

# The path which should be proxied (/ for all)
#export EOS_PSS_PATH=/

# ------------------------------------------------------------------
# Test Configuration
# ------------------------------------------------------------------

# mail notification for failed tests
#export EOS_TEST_MAILNOTIFY=apeters@mail.cern.ch

# SMS notification for failed tests
#export EOS_TEST_GSMNOTIFY="0041764875002@mail2sms.cern.ch"

# Instance name = name of directory at deepness 2 /eos/<instance>/
#export EOS_TEST_INSTANCE="dev"

# MGM host redirector
#export EOS_TEST_REDIRECTOR=localhost

# local test output directory
#export EOS_TEST_TESTSYS=/tmp/eos-instance-test

# time to lock re-sending of SMS for consecutively failing tests
#export EOS_TEST_GSMLOCKTIME=3600

# max. time given to the test to finish
#export EOS_TEST_TESTTIMESLICE=600

#-------------------------------------------------------------------------------
# QuarkDB Configuration
#-------------------------------------------------------------------------------

# QuarkDB Hostport
# EOS_QUARKDB_HOSTPORT=localhost:9999

# QuarkDB Password
# EOS_QUARKDB_PASSWD=password_must_be_atleast_32_characters

# ------------------------------------------------------------------
# Global Vstl Configuration
# ------------------------------------------------------------------
# define the global broker for subscription
# export EOS_VST_BROKER_URL=root://eos.cern.ch:1099//eos/

# enable subscription to the global broker if desired
# export EOS_VST_BROKER_ENABLE=1

# define which client we trust for querying this MGM
# export EOS_VST_TRUSTED_HOST=eos.cern.ch

# ------------------------------------------------------------------------------
# Archive configuration
# ------------------------------------------------------------------------------

# Set the root destination for all archives beloging to this instance
# export EOS_ARCHIVE_URL=root://castorpps.cern.ch//user/cern.ch/c3/archive/

# Set the CASTOR service class (svcClass) for all file transfers to CASTOR
# export EOS_ARCHIVE_SVCCLASS=default

# ------------------------------------------------------------------
# MGM TTY Console Broadcast Configuration
# ------------------------------------------------------------------

# define the log file where you want to grep
export EOS_TTY_BROADCAST_LISTEN_LOGFILE="/var/log/eos/xrootd.mgm.log"

# define the log file regex you want to broad cast to all consoles
export EOS_TTY_BROACAST_EGREP="\"CRIT|ALERT|EMERG|PROGRESS\""

# ------------------------------------------------------------------
# Service Script aliasing for EL7 machines
# ------------------------------------------------------------------

#which systemctl >& /dev/null
#if [ $? -eq 0 ]; then
#   alias service="service --skip-redirect"
#fi

# ------------------------------------------------------------------
# MGM Namespace Preset Size - this can safe memory for large namespaces if you know an upper limit for the namespace size
# ------------------------------------------------------------------
# export EOS_NS_DIR_SIZE=1000000
# export EOS_NS_FILE_SIZE=1000000

# ------------------------------------------------------------------
# MGM Boot options
# ------------------------------------------------------------------
# uncomment to avoid mmaping a changelog file
# export EOS_NS_BOOT_NOMMAP

# uncomment to speed up the scanning phase skipping CRC32 computation
# export EOS_NS_BOOT_NOCRC32

# uncomment to allow a multi-threaded boot process using maximum number of cores available
# export EOS_NS_BOOT_PARALLEL
