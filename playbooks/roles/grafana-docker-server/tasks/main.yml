---
- block:
  - set_fact:
      grafana_components: "{{ containers.grafana_server }}"

  - name: Create config base directory
    file:
      path: "/etc/grafana/"
      state: directory
      owner: root
      group: root
      mode: u=rwX,g=rX,o=rX

  - name: Create config files directory
    file:
      path: "/etc/grafana/server"
      state: directory
      owner: root
      group: root
      mode: u=rwX,g=rX,o=rX

  - name: Create provisioning files directory
    file:
      path: "/etc/grafana/server/provisioning"
      state: directory
      owner: "472"
      group: "472"
      mode: u=rwX,g=rwX,o=rwX

  - name: Create provisioning/dashboards files directory
    file:
      path: "/etc/grafana/server/provisioning/dashboards"
      state: directory
      owner: "472"
      group: "472"
      mode: u=rwX,g=rwX,o=rwX

  - name: Create provisioning/datasources files directory
    file:
      path: "/etc/grafana/server/provisioning/datasources"
      state: directory
      owner: "472"
      group: "472"
      mode: u=rwX,g=rwX,o=rwX

  - name: Create provisioning/notifiers files directory
    file:
      path: "/etc/grafana/server/provisioning/notifiers"
      state: directory
      owner: "472"
      group: "472"
      mode: u=rwX,g=rwX,o=rwX

  - name: Create config files
    template:
      src: loki.yaml.j2
      dest: /etc/grafana/server/provisioning/datasources/loki.yaml
      owner: "472"
      group: "472"
      mode: "0644"

  - name: Create a local volume
    docker_volume:
      name: "{{ item }}"
    loop:
    - "grafana-server_storage"
    - "grafana-server_log"

  - name: Start container
    docker_container:
      name: "grafana-server"
      image: "grafana/grafana:latest"
      state: started
      purge_networks: yes
      network_mode: host
      volumes:
      - "/etc/grafana/server/provisioning:/etc/grafana/provisioning"
      - "grafana-server_storage:/var/lib/grafana"
      - "grafana-server_log:/var/log/grafana"
    register: container_start_results

  - name: Setup firewall on internal zone
    firewalld:
      port: 3000/tcp
      permanent: yes
      immediate: yes
      state: enabled
      zone: internal
    notify:
    - reload firewalld

  when: containers is defined and containers.grafana_server is defined
