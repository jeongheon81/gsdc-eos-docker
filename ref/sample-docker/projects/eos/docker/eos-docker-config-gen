#!/bin/bash

export ED_ROOT_DIR=${ED_ROOT_DIR-"/root/eos"}
export ED_EOS_VAR_DIR=${ED_EOS_VAR_DIR-"$ED_ROOT_DIR/var"}
export ED_CONFIG_FILE=${ED_CONFIG_FILE-"eos-docker.cf"}

function generateEOSKey() {
    rm -f /etc/eos.keytab
    yes | xrdsssadmin -k eos -u daemon -g daemon add /etc/eos.keytab >& /dev/null
    chown daemon:daemon /etc/eos.keytab
    chmod 400 /etc/eos.keytab
}

function generateEOSConfig() {

    #[[ $EOS_INSTANCE_NAME == alice* ]] && ED_ISALICE=1 || ED_ISALICE=0

    [ -f /etc/sysconfig/eos_env ] && mv /etc/sysconfig/eos_env /etc/sysconfig/eos_env.backup
    cp /etc/sysconfig/eos_env.example /etc/sysconfig/eos_env
    sed -i 's/^XRD_ROLES=.*/XRD_ROLES=\"'"$XRD_ROLES"'\"/' /etc/sysconfig/eos_env
    sed -i 's/^EOS_INSTANCE_NAME=.*/EOS_INSTANCE_NAME=eos'$EOS_INSTANCE_NAME'/' /etc/sysconfig/eos_env
    sed -i 's/^EOS_MGM_HOST=.*/EOS_MGM_HOST='$EOS_MGM_HOST'/' /etc/sysconfig/eos_env
    sed -i 's/^EOS_MGM_HOST_TARGET=.*/EOS_MGM_HOST_TARGET='$EOS_MGM_HOST_TARGET'/' /etc/sysconfig/eos_env
    sed -i 's/^EOS_MGM_MASTER1=.*/EOS_MGM_MASTER1='$EOS_MGM_MASTER1'/' /etc/sysconfig/eos_env
    sed -i 's/^EOS_MGM_MASTER2=.*/EOS_MGM_MASTER2='$EOS_MGM_MASTER2'/' /etc/sysconfig/eos_env
    sed -i 's/^EOS_MGM_ALIAS=.*/EOS_MGM_ALIAS='$EOS_MGM_ALIAS'/' /etc/sysconfig/eos_env
    sed -i 's/^EOS_GEOTAG=.*/EOS_GEOTAG='$EOS_GEOTAG'/' /etc/sysconfig/eos_env

    if [ "$ED_ISALICE" == "1" ];then
        sed -i 's/^#EOS_FST_NO_SSS_ENFORCEMENT.*/EOS_FST_NO_SSS_ENFORCEMENT=1 ' /etc/sysconfig/eos_env
    fi
    [ -f /etc/xrd.cf.mgm.orig ] || cp /etc/xrd.cf.mgm /etc/xrd.cf.mgm.orig
    cp -f /etc/xrd.cf.mgm.orig /etc/xrd.cf.mgm

 
    sed -i 's/^all.export \//all.export \/ nolock/' /etc/xrd.cf.mgm
    if [ "$ED_ISALICE" == "1" ];then
        sed -i 's/^sec.protbind \* only krb5 gsi sss unix.*/sec.protbind \* only gsi sss unix/' /etc/xrd.cf.mgm    
        sed -i 's/^#mgmofs.authlib libXrdAliceTokenAcc.so/mgmofs.authlib \/usr\/lib64\/libXrdAliceTokenAcc.so/' /etc/xrd.cf.mgm
        sed -i 's/^#mgmofs.authorize/mgmofs.authorize/' /etc/xrd.cf.mgm
        echo "" >> /etc/xrd.cf.mgm
        echo "###########################################################">> /etc/xrd.cf.mgm
        echo "# configure bypass and prefix for ALICE SE" >> /etc/xrd.cf.mgm
        echo "###########################################################" >> /etc/xrd.cf.mgm
        echo "alicetokenacc.noauthzhost localhost" >> /etc/xrd.cf.mgm
        echo "alicetokenacc.noauthzhost localhost.localdomain" >> /etc/xrd.cf.mgm
        echo "alicetokenacc.truncateprefix /eos/$EOS_INSTANCE_NAME/grid" >> /etc/xrd.cf.mgm
        sed -i 's/alice/'$EOS_INSTANCE_NAME'/' /etc/grid-security/xrootd/TkAuthz.Authorization
        sed -i 's/user/grid/' /etc/grid-security/xrootd/TkAuthz.Authorization
    else
        sed -i 's/^sec.protocol gsi.*/#&/' /etc/xrd.cf.mgm
        sed -i 's/^sec.protocol krb5.*/#&/' /etc/xrd.cf.mgm
        if [ -z $ED_MGM_KRB5 ];then
            sed -i 's/^sec.protbind \* only krb5 gsi sss unix.*/sec.protbind \* only sss unix/' /etc/xrd.cf.mgm
        else
            sed -i 's/^#sec.protocol krb5 host.*/sec.protocol krb5 host\/<host>@'$ED_MGM_KRB5'/' /etc/xrd.cf.mgm   
            sed -i 's/^sec.protbind \* only krb5 gsi sss unix.*/sec.protbind \* only krb5 sss unix/' /etc/xrd.cf.mgm

        fi        
    fi

    [ -f /etc/xrd.cf.fst.orig ] || cp /etc/xrd.cf.fst /etc/xrd.cf.fst.orig
    cp -f /etc/xrd.cf.fst.orig /etc/xrd.cf.fst
    if [ "$ED_ISALICE" == "1" ];then
        echo "xrootd.monitor all flush 60s window 30s dest files info user $MONALISAHOST" >> /etc/xrd.cf.fst
    fi

    echo "# EOS generated config $(date)" > /etc/sysconfig/eos
    echo "export EOS_MGM_URL=\"$EOS_MGM_URL\"" >> /etc/sysconfig/eos
    if [ "$ED_ISALICE" == "1" ];then
        echo "export MONALISAHOST=\"$MONALISAHOST\"" >> /etc/sysconfig/eos
        echo "export APMON_INSTANCE_NAME=\"$APMON_INSTANCE_NAME\"" >> /etc/sysconfig/eos
        echo "export APMON_STORAGEPATH=\"$APMON_STORAGEPATH\"" >> /etc/sysconfig/eos
    fi
}

function defaultEOSEnvMGM() {
    XRD_ROLES="mq mgm sync"
    EOS_INSTANCE_NAME=test

    EOS_MGM_HOST=$(hostname -f)
    EOS_MGM_HOST_TARGET=$(hostname -f)
    EOS_MGM_MASTER1=$(hostname -f)
    EOS_MGM_MASTER2=$(hostname -f)
    EOS_MGM_ALIAS=$(hostname -f)
    EOS_GEOTAG="test"
    EOS_MGM_URL="root://$(hostname -f)"

    if [ "$ED_ISALICE" == "1" ];then
        EOS_INSTANCE_NAME=alice.test
        MONALISAHOST="localhost:9930"
        APMON_INSTANCE_NAME="ALICE::TEST::EOS"
        APMON_STORAGEPATH="/var/eos/fs"
    fi
}

function exportVarDir() {
    
    # remove all last / from $ED_EOS_VAR_DIR
    case $ED_EOS_VAR_DIR in *[!/]*/) x=${x%"${x##*[!/]}"};; esac

    if [ "$ED_EOS_VAR_DIR" != "/var" ];then
        mkdir -p $ED_EOS_VAR_DIR/log
        mv -f /var/eos $ED_EOS_VAR_DIR/eos
        mv -f /var/log/eos $ED_EOS_VAR_DIR/log/eos
    else
        [ -d $ED_EOS_VAR_DIR/eos ] || { mkdir -p $ED_EOS_VAR_DIR/eos; chown 2:2 $ED_EOS_VAR_DIR/eos; }
        [ -d $ED_EOS_VAR_DIR/log/eos ] || mkdir -p $ED_EOS_VAR_DIR/log/eos
    fi
}

[ -f /etc/eos.keytab ] || generateEOSKey
if [ -f $ED_ROOT_DIR/$ED_CONFIG_FILE ];then
    source /etc/eos-docker/$ED_CONFIG_FILE.default
    source $ED_ROOT_DIR/$ED_CONFIG_FILE
    export EOS_INSTANCE_NAME=$ED_EOS_INSTANCE_NAME
else
    echo "ERROR: $ED_ROOT_DIR/$ED_CONFIG_FILE was not found !!!"
    ls -al $ED_ROOT_DIR/
    exit 1
    #defaultEOSEnvMGM
fi

# generate default eos config files
generateEOSConfig

# Exporting setting back to ED_ROOT_DIR="/root/eos"
eos-docker-export

# exporting var directory (on for first time)
[ "$1" == "no-var" ] || exportVarDir
