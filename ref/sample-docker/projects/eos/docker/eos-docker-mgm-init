#!/bin/bash

ED_EOS_MAX_NUM_FS=${ED_EOS_MAX_NUM_FS-36}
ED_ISALICE=0
ED_INSTANCE_NAME=$(cat /etc/sysconfig/eos_env | grep "EOS_INSTANCE_NAME="| grep -v '#' | head -n 1 | cut -d '=' -f2)
ED_INSTANCE_NAME=${ED_INSTANCE_NAME/eos/}
[[ $ED_INSTANCE_NAME == alice* ]] && export ED_ISALICE=1 || export ED_ISALICE=0

ED_WAIT=5
echo "Doing 'systemctl status eos@mgm in $ED_WAIT sec ..."
sleep $ED_WAIT
systemctl status eos@mgm > /dev/null 2>&1
if [ ! $? -eq 0 ];then
    echo "Error EOS MGM is not started !!!. Exiting ..."
    exit 1
else
    echo "eos@mgm is running"
fi

echo "Doing EOS init ..."

eos -b vid enable sss
eos -b vid enable https
eos -b vid add gateway $(hostname -s)
eos -b space define default

# Define only one group as startup
if [ "$ED_EOS_FS_GROUP_PER_DISK" = "0" ];then
    eos -b group set default.0 on
else
    for name in `seq 0 $(($ED_EOS_MAX_NUM_FS-1))`; do eos -b group set default.$name on; done
fi
# Setting up file scrubbing every 3 weeks ... 
eos -b space config default space.scaninterval=1814400

# Enable auto-repair ...
eos -b space config default space.autorepair=on

# Setting up a grace period of 1 hour before auto-draining ...
eos -b space config default space.graceperiod=3600

# Setting up a drain period of 1 day ...
eos -b space config default space.drainperiod=3600

# Setting up a file system headroom of 5 G ...
eos -b space config default space.headroom=5G

if [ "$ED_ISALICE" == "1" ];then
    # Configuring as an ALICE SE ...
    eos -b mkdir /eos/$ED_INSTANCE_NAME/grid
    for name in `seq -w 00 15`; do eos -b map link /$name/ /eos/$ED_INSTANCE_NAME/grid/$name/; done
    eos -b chown 10367:1395 /eos/$ED_INSTANCE_NAME/grid
    eos -b chmod 750 /eos/$ED_INSTANCE_NAME/grid
    eos -b 'vid set map -unix <pwd> vuid:10367'
    eos -b 'vid set map -unix <pwd> vgid:1395'
fi

eos -b space set default on

# Exporting setting back to $ED_ROOT_DIR"
eos-docker-export
